% SPDX-License-Identifier:Â CC0-1.0

% this script computes the fields generated by an electric current point
% source and plots the different wave types in separate plots for seismic
% frequencies
% defining all the variables
clear all;
clc;
close all;
% predetermine fontsize
fs=14;
% Setting the parameters for a source wave
nf              =   128;
mf              =   4; % multiplication factor to have sinc-interpolation in time-domain
% Define the center frequency of the source waveform
fc              =   40;
% Define frequency axis
freq            =   linspace(0,4*fc,nf);
freq(1)         =   1e-6; % To prevent unnecessary problems upon division by zero. Can't be too close to zero, though, 
                         % since some variables either blow up or vanish in comparison to the rest of the entries in the frequency vector.
ss              =   2i*pi*freq;
% compute the frequency step size
df              =   freq(3)-freq(2);
dt              =   1/(mf*nf*df);
t               =   linspace(-mf*nf/2,mf*nf/2-1,mf*nf)*dt;


% Define Medium Parameters (frequency-independent)
rhof            =   1.0e3; % fluid density
rho             =   2.7e3;
Gfr             =   9.0e9; % shear modulus of the framework of grains
eta             =   1.0e-3; % fluid viscosity
k0              =   1.3e-12; % medium permeability (static)
Kfr             =   4.0e9;
Ks              =   4.0e10;
Kf              =   2.2e9;
Concentr        =   1.0e-4;
bplus           =   3.0e11;
bmin            =   3.0e11;
porosity        =   0.3;
epsilonRF       =   80.0;
epsilonRS       =   4.0;
alpha_inf       =   3.0;
pH              =   7.0;
similaritypar   =   8;

c0              =   299792458; %// velocity of light in free-space
mu0             =   4.0e-7*pi; %// free-space magnetic permeability
epsilon0        =   1.0/(mu0*c0*c0); %// free-space electric permittivity
e               =   1.602e-19; %// elementary charge
z_1             =   1; %// ion valences
z_1c            =   -1; %// valency of the conjugate ion
NA              =   6.022e23; %// Avogadro's constant [mol^{-1}]
kb              =   1.381e-23;  %// Boltzmann constant
T               =   295.0; %// Temperature in Kelvin

epsilonR        =   (porosity/alpha_inf)*(epsilonRF-epsilonRS)+epsilonRS ;
omegac          =   (porosity*eta)/(alpha_inf*k0*rhof);% critical frequency
zetap           =   8e-3+26e-3*log10(Concentr);% zeta potential, empirical relation (experimental studies, Pride&Morgan 1991)
L0              =   -(porosity*epsilon0*epsilonRF*zetap)/(alpha_inf*eta); % static coupling coefficient
L               =   L0; %because omega << omega_c (critical frequency)
N               =   10e3*Concentr*NA*abs(z_1c); % bulk-ionic concentration (of species i, in this case only 2 species; binary symmetric electrolyte)
sigmaF          =   ((e*z_1)^2)*N*(bplus+bmin); %! conductivity of the pore-fluid phase (simplified cond. pure electrolyte)
sigmaE          =   (porosity*sigmaF)/(alpha_inf); %! bulk electric conductivity (freq-(in)dependent)
% %!sigma_E = (poros*sigmaF)/(alpha_inf)*(1+(2*(sigma_em+sigma_os))/(sigmaF*Lambda)); ! = complete version: bulk electric conductivity (freq-dependent */
rhoB            =   (1.0-porosity)*rho+porosity*rhof; % effective density of the fluid (in relative motion)
epsilon         =   epsilon0*epsilonR;
Delta           =   Kf*((1-porosity)*Ks-Kfr)/(porosity*(Ks)^2); %! combination of the frequency-independent compression moduli
Kg              =   (Kfr+porosity*Kf+(1+porosity)*Ks*Delta)/(1+Delta); %! Gassmann's bulk modulus
C               =   (Kf+Ks*Delta)/(1+Delta);
M               =    Kf/(porosity*(1+Delta)); %! the elastic media parameter S is defined as Kg-2/3Gfr-C**2/ M
H               =   Kg + 4.0*Gfr/3.0;
S               =   Kg-((2.0/3.0)*Gfr)-((C*C)/M);
sigmaM          =   0.0; % magnetic conductivity
Kc              =   (S+2.*Gfr);
% defining the grid
nx=128;
xx1=linspace(-350,350,nx);
xx2=xx1;
[x1,x2,s]=meshgrid(xx1,xx2,ss);
% fixed vertical source-receiver distance
x3=50;
% distance and unit vectors
R = sqrt(x1.^2 + x2.^2 + x3.^2);
th1=x1./R;
th2=x2./R;
th3=x3./R;
% frequency dependent parameters
k               =   k0./(sqrt(1+4.*s./(similaritypar.*omegac))+s./omegac);% frequency-dependent dynamic permeability
rhoE            =   eta./(s.*k); % effective density
rhoc            =   rhoB-((rhof.*rhof)./rhoE); % Complex Density rhoC
zeta            =   sigmaM+s.*mu0; 
etae            =   sigmaE+s.*epsilon;
varsigma        =   etae - s.*rhoE.*L.^2;
chi             =   s.*rhof*L;
% source signature
wav=-2*sqrt(1/pi)*(s/(2*pi*fc)).^2.*exp((s/(2*pi*fc)).^2)/fc;
% spherical wavenumbers of eqs B-9, B-10, B-12, B-13.
ypf     =   s./sqrt(2).*sqrt((rhoB.*M-2.*rhof.*C+rhoE.*H.*etae./varsigma)./(H.*M-C.^2) - sqrt(((rhoB.*M-2.*rhof.*C+rhoE.*H.*etae./varsigma)./(H.*M-C.^2)).^2 + 4.*(rhof.^2-rhoB.*rhoE.*etae./varsigma)./(H.*M-C.^2)));
yps     =   s./sqrt(2).*sqrt((rhoB.*M-2.*rhof.*C+rhoE.*H.*etae./varsigma)./(H.*M-C.^2) + sqrt(((rhoB.*M-2.*rhof.*C+rhoE.*H.*etae./varsigma)./(H.*M-C.^2)).^2 + 4.*(rhof.^2-rhoB.*rhoE.*etae./varsigma)./(H.*M-C.^2)));
ys      =   1/sqrt(2).*sqrt(s.^2.*rhoc./Gfr+zeta.*etae - sqrt((s.^2.*rhoc./Gfr-zeta.*etae).^2-4.*s.^3.*zeta.*(rhof.*L).^2./Gfr));
yem     =   1/sqrt(2).*sqrt(s.^2.*rhoc./Gfr+zeta.*etae + sqrt((s.^2.*rhoc./Gfr-zeta.*etae).^2-4.*s.^3.*zeta.*(rhof.*L).^2./Gfr));
% recurring coefficient factors
dems    =   1./(yem.^2-ys.^2);            
dpspf   =   1./(yps.^2-ypf.^2);     

% electric current, J^e_1 only

% Green's functions of eq C-10
GS = exp(-ys.*R)./(4*pi*R);
GEM = exp(-yem.*R)./(4*pi*R);
GPs = exp(-yps.*R)./(4*pi*R);
GPf = exp(-ypf.*R)./(4*pi*R);
% grad (equation C-15)
[GS1,GS2,GS3]=Greeni(ys,th1,th2,th3,R);
[GEM1,GEM2,GEM3]=Greeni(yem,th1,th2,th3,R);
[GPf1,GPf2,GPf3]=Greeni(ypf,th1,th2,th3,R);
[GPs1,GPs2,GPs3]=Greeni(yps,th1,th2,th3,R);
% grad-grad divided by gamma^2 (equation C-16)
[GS11,GS21,GS31]=Greenij(ys,th1,th2,th3,R);
[GEM11,GEM21,GEM31]=Greenij(yem,th1,th2,th3,R);
[GPf11,GPf21,GPf31]=Greenij(ypf,th1,th2,th3,R);
[GPs11,GPs21,GPs31]=Greenij(yps,th1,th2,th3,R);
% grad-grad - delta_{ij} is coded on the fly
% grad-grad-grad divided by gamma^2 without delta_{ij}-grad in (equation C-18)
% because then it has high-degree of symmetry
[GS111,GS211,GS311,GS221,GS321,GS331]=Greenijk(ys,th1,th2,th3,R);
[GEM111,GEM211,GEM311,GEM221,GEM321,GEM331]=Greenijk(yem,th1,th2,th3,R);
[GPs111,GPs211,GPs311,GPs221,GPs321,GPs331]=Greenijk(yps,th1,th2,th3,R);
[GPf111,GPf211,GPf311,GPf221,GPf321,GPf331]=Greenijk(ypf,th1,th2,th3,R);
% particle velocity
KSSve = -s.*chi.*zeta.*dems/Gfr;
KPsve = s.^2.*rhoE.*L*C.*(s.^2*rhof./C-yps.^2).*dpspf./((H*M-C^2)*varsigma);
KPfve = s.^2.*rhoE.*L*C.*(s.^2*rhof./C-ypf.^2).*dpspf./((H*M-C^2)*varsigma);
v11S = KSSve.*(GS11-GS);
v11EM = -KSSve.*(GEM11-GEM);
v11Ps = -KPsve.*GPs11;
v11Pf = KPfve.*GPf11;
% electric field
% KSee = zeta.*(s.^2.*rhoc/Gfr-ys.^2).*dems;
% KEMee = zeta.*(s.^2.*rhoc/Gfr-yem.^2).*dems;
% KPsee = (s.*rhoE.*L./varsigma).^2.*s.*H.*(s.^2.*rhoB./H-yps.^2).*dpspf./(H*M-C^2);
% KPfee = (s.*rhoE.*L./varsigma).^2.*s.*H.*(s.^2.*rhoB./H-ypf.^2).*dpspf./(H*M-C^2);
% E11S = KSee.*(GS11-GS);
% E11EM = -KEMee.*(GEM11-GEM);
% E11Ps = -KPsee.*GPs11;
% E11Pf = KPfee.*GPf11;
% filtration velocity
KSwe = zeta.*L.*(s.^2.*rhoB/Gfr-ys.^2).*dems;
KEMwe = zeta.*L.*(s.^2.*rhoB/Gfr-yem.^2).*dems;
KPswe = -s.^2.*rhoE.*L.*H.*(s.^2.*rhoB/H-yps.^2).*dpspf./((H*M-C^2).*varsigma);
KPfwe = -s.^2.*rhoE.*L.*H.*(s.^2.*rhoB/H-ypf.^2).*dpspf./((H*M-C^2).*varsigma);
w11S = KSwe.*(GS11-GS);
w11EM = -KEMwe.*(GEM11-GEM);
w11Ps = -KPswe.*GPs11;
w11Pf = KPfwe.*GPf11;
% acoustic pressure
KPspe = s.*rhoE.*L.*(s.^2.*(rhoB*M-rhof*C)/(H*M-C^2)-yps.^2).*dpspf./varsigma;
KPfpe = s.*rhoE.*L.*(s.^2.*(rhoB*M-rhof*C)/(H*M-C^2)-ypf.^2).*dpspf./varsigma;
p1Ps = -KPspe.*GPs1;
p1Pf = KPfpe.*GPf1;
% bulk stress field
KSte = -chi.*zeta.*dems;
KEMte = KSte;
KPste = 2*s.*rhoE.*L.*C.*Gfr.*(s.^2.*rhof/C-yps.^2).*dpspf./((H*M-C^2).*varsigma);
KPfte = 2*s.*rhoE.*L.*C.*Gfr.*(s.^2.*rhof/C-ypf.^2).*dpspf./((H*M-C^2).*varsigma);
NPste = s.^3.*rhoE.*L.*(rhof*H-rhoB*C).*dpspf./((H*M-C^2).*varsigma);
NPfte = NPste;
tau11S = 2.*KSte.*(GS111-GS1);
tau11EM = -2.*KEMte.*(GEM111-GEM1);
tau11Ps = -KPste.*GPs111 - NPste.*GPs1;
tau11Pf = KPfte.*GPf111 + NPfte.*GPf1;
% compute and plot some time-fields
tv11S=2*real(ifft(v11S.*wav,mf*nf,3))/dt;
tv11EM=2*real(ifft(v11EM.*wav,mf*nf,3))/dt;
tv11Ps=2*real(ifft(v11Ps.*wav,mf*nf,3))/dt;
tv11Pf=2*real(ifft(v11Pf.*wav,mf*nf,3))/dt;
tw11S=2*real(ifft(w11S.*wav,mf*nf,3))/dt;
tw11EM=2*real(ifft(w11EM.*wav,mf*nf,3))/dt;
tw11Ps=2*real(ifft(w11Ps.*wav,mf*nf,3))/dt;
tw11Pf=2*real(ifft(w11Pf.*wav,mf*nf,3))/dt;
tp1Ps=2*real(ifft(p1Ps.*wav,mf*nf,3))/dt;
tp1Pf=2*real(ifft(p1Pf.*wav,mf*nf,3))/dt;
ttau11S=2*real(ifft(tau11S.*wav,mf*nf,3))/dt;
ttau11EM=2*real(ifft(tau11EM.*wav,mf*nf,3))/dt;
ttau11Ps=2*real(ifft(tau11Ps.*wav,mf*nf,3))/dt;
ttau11Pf=2*real(ifft(tau11Pf.*wav,mf*nf,3))/dt;
it=nf/2;
figure(1)
imagesc(xx1,xx2,squeeze(tv11S(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['S-wave of G_{11}^{ve}(x,y,z=50m,t=98ms)'])
print -deps2 Sve.eps
figure(2)
imagesc(xx1,xx2,squeeze(tv11EM(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['EM field of G_{11}^{ve}(x,y,z=50m,t=98 ms)'])
print -deps2 EMve.eps
figure(3)
imagesc(xx1,xx2,squeeze(tv11Ps(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['slow P-wave of G_{11}^{ve}(x,y,z=50m,t=98ms)'])
print -deps2 Psve.eps
figure(4)
imagesc(xx1,xx2,squeeze(tv11Pf(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['fast P-wave of G_{11}^{ve}(x,y,z=50m,t=98ms)'])
print -deps2 Pfve.eps
figure(5)
imagesc(xx1,xx2,squeeze(tw11S(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['S-wave of G_{11}^{we}(x,y,z=50m,t=98ms)'])
print -deps2 Swe.eps
figure(6)
imagesc(xx1,xx2,squeeze(tw11EM(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['EM field of G_{11}^{we}(x,y,z=50m,t=98ms)'])
print -deps2 EMwe.eps
figure(7)
imagesc(xx1,xx2,squeeze(tw11Ps(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['slow P-wave of G_{11}^{we}(x,y,z=50m,t=98ms)'])
print -deps2 Pswe.eps
figure(8)
imagesc(xx1,xx2,squeeze(tw11Pf(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['fast P-wave of G_{11}^{we}(x,y,z=50m,t=98ms)'])
print -deps2 Pfwe.eps
figure(9)
imagesc(xx1,xx2,squeeze(ttau11S(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['S-wave of G_{11}^{\tau e}(x,y,z=50m,t=98ms)'])
print -deps2 Staue.eps
figure(10)
imagesc(xx1,xx2,squeeze(ttau11EM(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['EM field of G_{11}^{\tau e}(x,y,z=50m,t=98ms)'])
print -deps2 EMtaue.eps
figure(11)
imagesc(xx1,xx2,squeeze(ttau11Ps(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['slow P-wave of G_{11}^{\tau e}(x,y,z=50m,t=98ms)'])
print -deps2 Pstaue.eps
figure(12)
imagesc(xx1,xx2,squeeze(ttau11Pf(:,:,it)));colorbar;
colormap(1-gray)
set(gca,'fontsize',18,'plotboxaspectratio',[1 1 1])
xlabel('x distance from source [m]')
ylabel('y distance from source [m]')
title(['fast P-wave of G_{11}^{\tau e}(x,y,z=50m,t=98ms)'])
print -deps2 Pftaue.eps
